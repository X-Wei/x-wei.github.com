<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>mx's blog - shell</title><link href="http://x-wei.github.io/" rel="alternate"></link><link href="http://x-wei.github.io/feeds/tag-shell.atom.xml" rel="self"></link><id>http://x-wei.github.io/</id><updated>2013-07-02T00:00:00+02:00</updated><entry><title>ssh远程登录学校机房电脑</title><link href="http://x-wei.github.io/ssh%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E5%AD%A6%E6%A0%A1%E6%9C%BA%E6%88%BF%E7%94%B5%E8%84%91.html" rel="alternate"></link><published>2013-07-02T00:00:00+02:00</published><updated>2013-07-02T00:00:00+02:00</updated><author><name>mx</name></author><id>tag:x-wei.github.io,2013-07-02:/ssh远程登录学校机房电脑.html</id><summary type="html">&lt;p&gt;X&lt;a href="http://www.enseignement.polytechnique.fr/profs/informatique/Philippe.Chassignet/MOYENS/stations.html"&gt;机房的电脑&lt;/a&gt;配置还是很高的, 所以...&lt;/p&gt;
&lt;p&gt;远程登录的命令是: 
    ssh -X nom.prenom@truite.polytechnique.fr&lt;/p&gt;
&lt;p&gt;(-X命令表示允许使用X程序.)&lt;/p&gt;
&lt;p&gt;登录进去以后, 可以在终端里输入命令, 比如查看系统板本: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$  lsb_release -a&lt;/span&gt;
&lt;span class="code-line"&gt;LSB Version:    :core-4.0-ia32:core-4.0-noarch:graphics-4.0-ia32:graphics-4.0-noarch:printing-4.0-ia32:printing-4.0-noarch&lt;/span&gt;
&lt;span class="code-line"&gt;Distributor ID: n/a&lt;/span&gt;
&lt;span class="code-line"&gt;Description:    CentOS&lt;/span&gt;
&lt;span class="code-line"&gt;Release:    n/a&lt;/span&gt;
&lt;span class="code-line"&gt;Codename:   n/a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;机房是centOS, 高效稳定. &lt;/p&gt;
&lt;p&gt;然后可以在终端输入命令来启动程序, 比如&lt;code&gt;eclipse &amp;amp;,&lt;/code&gt;就会在你这边的电脑显示出来eclipse的窗口 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;X&lt;a href="http://www.enseignement.polytechnique.fr/profs/informatique/Philippe.Chassignet/MOYENS/stations.html"&gt;机房的电脑&lt;/a&gt;配置还是很高的, 所以...&lt;/p&gt;
&lt;p&gt;远程登录的命令是: 
    ssh -X nom.prenom@truite.polytechnique.fr&lt;/p&gt;
&lt;p&gt;(-X命令表示允许使用X程序.)&lt;/p&gt;
&lt;p&gt;登录进去以后, 可以在终端里输入命令, 比如查看系统板本: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$  lsb_release -a&lt;/span&gt;
&lt;span class="code-line"&gt;LSB Version:    :core-4.0-ia32:core-4.0-noarch:graphics-4.0-ia32:graphics-4.0-noarch:printing-4.0-ia32:printing-4.0-noarch&lt;/span&gt;
&lt;span class="code-line"&gt;Distributor ID: n/a&lt;/span&gt;
&lt;span class="code-line"&gt;Description:    CentOS&lt;/span&gt;
&lt;span class="code-line"&gt;Release:    n/a&lt;/span&gt;
&lt;span class="code-line"&gt;Codename:   n/a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;机房是centOS, 高效稳定. &lt;/p&gt;
&lt;p&gt;然后可以在终端输入命令来启动程序, 比如&lt;code&gt;eclipse &amp;amp;,&lt;/code&gt;就会在你这边的电脑显示出来eclipse的窗口 (加"&amp;amp;"是可以使多个程序同时启动).&lt;/p&gt;
&lt;p&gt;另外, 远程拷贝到本地:
    scp xing.wei@france.polytechnique.fr:/users/eleves-b/x2012/xing.wei/  /home/wx
几个常用的程序: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;eclipse &amp;amp;&lt;/span&gt;
&lt;span class="code-line"&gt;scilab &amp;amp; &lt;/span&gt;
&lt;span class="code-line"&gt;firefox &amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可惜不知道咋能显示远程的桌面, 不过这也差不多够了, 以后用eclipse或者scilab这类比较"大"的程序, 直接用机房的工作站做好了...&lt;/p&gt;</content><category term="shell"></category></entry><entry><title>水源PPP板图片下载器</title><link href="http://x-wei.github.io/%E6%B0%B4%E6%BA%90PPP%E6%9D%BF%E5%9B%BE%E7%89%87%E4%B8%8B%E8%BD%BD%E5%99%A8.html" rel="alternate"></link><published>2012-06-07T20:14:00+02:00</published><updated>2012-06-07T20:14:00+02:00</updated><author><name>mx</name></author><id>tag:x-wei.github.io,2012-06-07:/水源PPP板图片下载器.html</id><summary type="html">&lt;p&gt;这个其实是三月份的时候做的, 当时刚刚学会用urllib和正则表达式做一些爬虫, 于是结合人民群众的需要, 写了个小脚本(福利~) &lt;/p&gt;
&lt;p&gt;不过现在我还只是会照葫芦画瓢那样用urllib, 没什么长进...&lt;/p&gt;
&lt;p&gt;github地址: &lt;a href="https://github.com/X-Wei/yssy_ppp_pic_downloader"&gt;https://github.com/X-Wei/yssy_ppp_pic_downloader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.&lt;/p&gt;
&lt;p&gt;功能就是下载水源ppperson板里帖子的图片, 并且每个帖子一个文件夹放好. 通过修改main函数可以选择下载最近一页的帖子还是下载全部帖子(或者最近几页的帖子)&lt;/p&gt;
&lt;p&gt;原理很简单, 分析网页的html代码, 用正则表达式找出图片的地址然后下载到本地. 当时我已经写了两三个简单的爬虫, 所以这个写得蛮快, 而且只用50行就搞定了...&lt;/p&gt;
&lt;p&gt;不会用多线程, 只能一张一张下载, 帖子数目实在太多了, 我让它跑了一晚上, 第二天跑完, 下载了8个G的图, 几千个文件夹(囧)......&lt;/p&gt;
&lt;p&gt;2.&lt;/p&gt;
&lt;p&gt;不过还是遇到了一些问题, 比较老的帖子会有些图片404, 这时或者这个帖子对应的文件夹为空, 或者里面的图片其实不是图片, 而是出错信息的html代码(虽然看后缀是个图片). 我需要把那些不是图片的文件删掉, 而且要删掉所有的空文件夹. &lt;/p&gt;
&lt;p&gt;删除不是图片的文件(其实应该是删除纯文本文件), 在水源发贴问, 用shell命令(perl)做到了(虽然不明白为什么这样写...):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find yssy_ppp …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;这个其实是三月份的时候做的, 当时刚刚学会用urllib和正则表达式做一些爬虫, 于是结合人民群众的需要, 写了个小脚本(福利~) &lt;/p&gt;
&lt;p&gt;不过现在我还只是会照葫芦画瓢那样用urllib, 没什么长进...&lt;/p&gt;
&lt;p&gt;github地址: &lt;a href="https://github.com/X-Wei/yssy_ppp_pic_downloader"&gt;https://github.com/X-Wei/yssy_ppp_pic_downloader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.&lt;/p&gt;
&lt;p&gt;功能就是下载水源ppperson板里帖子的图片, 并且每个帖子一个文件夹放好. 通过修改main函数可以选择下载最近一页的帖子还是下载全部帖子(或者最近几页的帖子)&lt;/p&gt;
&lt;p&gt;原理很简单, 分析网页的html代码, 用正则表达式找出图片的地址然后下载到本地. 当时我已经写了两三个简单的爬虫, 所以这个写得蛮快, 而且只用50行就搞定了...&lt;/p&gt;
&lt;p&gt;不会用多线程, 只能一张一张下载, 帖子数目实在太多了, 我让它跑了一晚上, 第二天跑完, 下载了8个G的图, 几千个文件夹(囧)......&lt;/p&gt;
&lt;p&gt;2.&lt;/p&gt;
&lt;p&gt;不过还是遇到了一些问题, 比较老的帖子会有些图片404, 这时或者这个帖子对应的文件夹为空, 或者里面的图片其实不是图片, 而是出错信息的html代码(虽然看后缀是个图片). 我需要把那些不是图片的文件删掉, 而且要删掉所有的空文件夹. &lt;/p&gt;
&lt;p&gt;删除不是图片的文件(其实应该是删除纯文本文件), 在水源发贴问, 用shell命令(perl)做到了(虽然不明白为什么这样写...):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find yssy_ppp/ -type f | perl -ne 'chomp;unlink "$_" if -T $_'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关于删除空目录, 发现&lt;code&gt;rmdir&lt;/code&gt;命令就已经可以了, 会删除空文件夹, 非空文件夹不会删除(虽然会显示警告).&lt;/p&gt;
&lt;p&gt;python里面调用shell命令只需要:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;os.system("shell_command")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所以, 只需要在程序的最后加上两行:
    os.system('''find yssy_ppp/ -type f | perl -ne 'chomp;unlink "$&lt;em&gt;" if -T $&lt;/em&gt;' ''')
    os.system('rmdir yssy_ppp/*')&lt;/p&gt;
&lt;p&gt;虽然终端里运行时最后会因为那个&lt;code&gt;rmdir&lt;/code&gt;命令出一堆警告, 但是既然功能实现了就懒得改了...&lt;/p&gt;
&lt;p&gt;3.&lt;/p&gt;
&lt;p&gt;还写(改写)过一个人人相册下载的脚本, 不过需要改进, 不知毕业前能不能搞定......&lt;/p&gt;</content><category term="git"></category><category term="python"></category><category term="shell"></category></entry><entry><title>打乱文本的行</title><link href="http://x-wei.github.io/%E6%89%93%E4%B9%B1%E6%96%87%E6%9C%AC%E7%9A%84%E8%A1%8C.html" rel="alternate"></link><published>2012-05-01T00:00:00+02:00</published><updated>2012-05-01T00:00:00+02:00</updated><author><name>mx</name></author><id>tag:x-wei.github.io,2012-05-01:/打乱文本的行.html</id><summary type="html">&lt;p&gt;今天cbl问了我一个问题: 怎样打乱一个文本文件的所有行??&lt;/p&gt;
&lt;p&gt;仔细一想, 确实有难度... 因为那个文本文件居然有1G, 用python读进内存再打乱的思路估计不行啊... 那么awk, shell什么的有没有解决方法? 搜到了一些帖子, 但是稍微复杂一点的shell脚本我也看不懂(弱爆了)...&lt;/p&gt;
&lt;p&gt;我甚至想大概vim会提供这个功能吧, 没想到在搜的时候居然搜到了一个现成的shell命令: &lt;strong&gt;shuf&lt;/strong&gt;!!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ shuf --help&lt;/span&gt;
&lt;span class="code-line"&gt;用法： shuf &lt;span class="o"&gt;[&lt;/span&gt;选项&lt;span class="o"&gt;]&lt;/span&gt;... &lt;span class="o"&gt;[&lt;/span&gt;文件&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;　或者:  shuf -e &lt;span class="o"&gt;[&lt;/span&gt;选项&lt;span class="o"&gt;]&lt;/span&gt;... &lt;span class="o"&gt;[&lt;/span&gt;参数&lt;span class="o"&gt;]&lt;/span&gt;...&lt;/span&gt;
&lt;span class="code-line"&gt;　或者:  shuf -i LO-HI &lt;span class="o"&gt;[&lt;/span&gt;选项&lt;span class="o"&gt;]&lt;/span&gt;...&lt;/span&gt;
&lt;span class="code-line"&gt;把输入行按随机顺序输出到标准输出。&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;长选项必须使用的参数对于短选项时也是必需使用的。&lt;/span&gt;
&lt;span class="code-line"&gt;  -e, --echo            将每个参数视为输入行&lt;/span&gt;
&lt;span class="code-line"&gt;  -i, --input-range&lt;span class="o"&gt;=&lt;/span&gt;LO-HI   将LO 到HI 的每个数字视为输入行&lt;/span&gt;
&lt;span class="code-line"&gt;  -n, --head-count&lt;span class="o"&gt;=&lt;/span&gt;行数       最多输出指定的行数&lt;/span&gt;
&lt;span class="code-line"&gt;  -o, --output&lt;span class="o"&gt;=&lt;/span&gt;文件       将结果输出到指定文件而非标准输出&lt;/span&gt;
&lt;span class="code-line"&gt;      --random-source …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;今天cbl问了我一个问题: 怎样打乱一个文本文件的所有行??&lt;/p&gt;
&lt;p&gt;仔细一想, 确实有难度... 因为那个文本文件居然有1G, 用python读进内存再打乱的思路估计不行啊... 那么awk, shell什么的有没有解决方法? 搜到了一些帖子, 但是稍微复杂一点的shell脚本我也看不懂(弱爆了)...&lt;/p&gt;
&lt;p&gt;我甚至想大概vim会提供这个功能吧, 没想到在搜的时候居然搜到了一个现成的shell命令: &lt;strong&gt;shuf&lt;/strong&gt;!!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ shuf --help&lt;/span&gt;
&lt;span class="code-line"&gt;用法： shuf &lt;span class="o"&gt;[&lt;/span&gt;选项&lt;span class="o"&gt;]&lt;/span&gt;... &lt;span class="o"&gt;[&lt;/span&gt;文件&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;　或者:  shuf -e &lt;span class="o"&gt;[&lt;/span&gt;选项&lt;span class="o"&gt;]&lt;/span&gt;... &lt;span class="o"&gt;[&lt;/span&gt;参数&lt;span class="o"&gt;]&lt;/span&gt;...&lt;/span&gt;
&lt;span class="code-line"&gt;　或者:  shuf -i LO-HI &lt;span class="o"&gt;[&lt;/span&gt;选项&lt;span class="o"&gt;]&lt;/span&gt;...&lt;/span&gt;
&lt;span class="code-line"&gt;把输入行按随机顺序输出到标准输出。&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;长选项必须使用的参数对于短选项时也是必需使用的。&lt;/span&gt;
&lt;span class="code-line"&gt;  -e, --echo            将每个参数视为输入行&lt;/span&gt;
&lt;span class="code-line"&gt;  -i, --input-range&lt;span class="o"&gt;=&lt;/span&gt;LO-HI   将LO 到HI 的每个数字视为输入行&lt;/span&gt;
&lt;span class="code-line"&gt;  -n, --head-count&lt;span class="o"&gt;=&lt;/span&gt;行数       最多输出指定的行数&lt;/span&gt;
&lt;span class="code-line"&gt;  -o, --output&lt;span class="o"&gt;=&lt;/span&gt;文件       将结果输出到指定文件而非标准输出&lt;/span&gt;
&lt;span class="code-line"&gt;      --random-source&lt;span class="o"&gt;=&lt;/span&gt;文件    从指定文件获得随机比特&lt;/span&gt;
&lt;span class="code-line"&gt;  -z, --zero-terminated 以0 结束行而非新行&lt;/span&gt;
&lt;span class="code-line"&gt;      --help        显示此帮助信息并退出&lt;/span&gt;
&lt;span class="code-line"&gt;      --version     显示版本信息并退出&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;如果没有指定文件，或者文件为&lt;span class="s2"&gt;"-"&lt;/span&gt;，则从标准输入读取。&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;请向bug-coreutils@gnu.org&lt;span class="o"&gt;](&lt;/span&gt;mailto:请向bug-coreutils@gnu.org&lt;span class="o"&gt;)&lt;/span&gt; 报告shuf 的错误&lt;/span&gt;
&lt;span class="code-line"&gt;GNU coreutils 项目主页：&lt;span class="s"&gt;&amp;lt;&amp;lt;http://www.gnu.org/software/coreutils/&amp;gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt;GNU 软件一般性帮助：&amp;lt;&amp;lt;http&lt;/span&gt;://www.gnu.org/gethelp/&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;请向&lt;span class="s"&gt;&amp;lt;&amp;lt;http://translationproject.org/team/zh_CN.ht&lt;/span&gt;ml&amp;gt;&amp;gt; 报告shuf 的翻译错误&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;太好了吧! 用一个小的文本文件一试, 果然是可以的! 
&lt;code&gt;shuf [filename]&lt;/code&gt;
另外, 加上-o参数, 可以指定输出到一个新文件(估计用shell的输出重定向方法也可以吧):
&lt;code&gt;shuf [filename] -o [output_filename]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对了, 我搜到的网址是&lt;a href="http://os.51cto.com/art/201103/246525.htm"&gt;这里&lt;/a&gt;, 介绍了一些非主流的命令. 比如另一条命令: &lt;code&gt;tac&lt;/code&gt;(&lt;code&gt;cat&lt;/code&gt;的反转), 作用是先输出文件的末端, 也很有意思.&lt;/p&gt;</content><category term="shell"></category></entry><entry><title>用du命令查看各目录大小</title><link href="http://x-wei.github.io/use_du_shell.html" rel="alternate"></link><published>2012-02-14T00:00:00+01:00</published><updated>2012-02-14T00:00:00+01:00</updated><author><name>mx</name></author><id>tag:x-wei.github.io,2012-02-14:/use_du_shell.html</id><summary type="html">&lt;p&gt;du用来计算目录的磁盘用量. 具体的参数可以用man或者--help, 这里不贴了(其实我也没仔细看...). 今天看见水源上有人说 用 -sh这个参数比较好:&lt;/p&gt;
&lt;p&gt;-s: 只计算各个目录的总用量(就是说不要递归操作) 后面跟着&lt;em&gt;或者.&lt;/em&gt;就可以查看各个目录的大小了.
-h: 易于查看的方式&lt;/p&gt;
&lt;p&gt;比如~/目录经常不知道为什么空间在减少, 那就运行:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;du -sh ~/*&lt;/code&gt; 以及 &lt;code&gt;du -sh /.*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;即可&lt;/p&gt;
&lt;p&gt;有时候文件夹比较多的情况, 还是不容易发现那个文件夹占用了大部分空间, 这时用sort命令对du的结果进行排序就行了!
参考了&lt;a href="http://www.xn--b0t733db8c.com/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/12950504311.html"&gt;这里&lt;/a&gt;, 顺便学会了: 两条一起执行是用"|"进行分割的.&lt;/p&gt;
&lt;p&gt;所以命令为:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;du -sm ~/* | sort -nr&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意这时du不能用-h参数, 因为这样的话文件可能是以M为单位也可能是以k为单位, 而sort的时候只看前面的数字值, 不看单位. 用-m参数, 表示让所有结果以M为单位显示.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;imported from zim&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;du用来计算目录的磁盘用量. 具体的参数可以用man或者--help, 这里不贴了(其实我也没仔细看...). 今天看见水源上有人说 用 -sh这个参数比较好:&lt;/p&gt;
&lt;p&gt;-s: 只计算各个目录的总用量(就是说不要递归操作) 后面跟着&lt;em&gt;或者.&lt;/em&gt;就可以查看各个目录的大小了.
-h: 易于查看的方式&lt;/p&gt;
&lt;p&gt;比如~/目录经常不知道为什么空间在减少, 那就运行:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;du -sh ~/*&lt;/code&gt; 以及 &lt;code&gt;du -sh /.*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;即可&lt;/p&gt;
&lt;p&gt;有时候文件夹比较多的情况, 还是不容易发现那个文件夹占用了大部分空间, 这时用sort命令对du的结果进行排序就行了!
参考了&lt;a href="http://www.xn--b0t733db8c.com/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/12950504311.html"&gt;这里&lt;/a&gt;, 顺便学会了: 两条一起执行是用"|"进行分割的.&lt;/p&gt;
&lt;p&gt;所以命令为:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;du -sm ~/* | sort -nr&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意这时du不能用-h参数, 因为这样的话文件可能是以M为单位也可能是以k为单位, 而sort的时候只看前面的数字值, 不看单位. 用-m参数, 表示让所有结果以M为单位显示.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;imported from zim&lt;/strong&gt;&lt;/p&gt;</content><category term="shell"></category></entry></feed>