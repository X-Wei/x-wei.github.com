<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>mx's blog - eclipse</title><link href="http://x-wei.github.io/" rel="alternate"></link><link href="http://x-wei.github.io/feeds/tag-eclipse.atom.xml" rel="self"></link><id>http://x-wei.github.io/</id><updated>2014-07-15T00:00:00+02:00</updated><entry><title>Eclipse快捷键总结</title><link href="http://x-wei.github.io/Eclipse%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%80%BB%E7%BB%93.html" rel="alternate"></link><published>2014-07-15T00:00:00+02:00</published><updated>2014-07-15T00:00:00+02:00</updated><author><name>mx</name></author><id>tag:x-wei.github.io,2014-07-15:/Eclipse快捷键总结.html</id><summary type="html">&lt;p&gt;Eclipse让我很喜欢的最大原因大概就是它的好用的快捷键了, 这里进行一下总结, 掌握这些快捷键可以让编辑代码变得更加高效. &lt;/p&gt;
&lt;h2 id="ji-ben-kuai-jie-jian"&gt;基本快捷键&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;格式化代码: &lt;code&gt;ctrl+alt+F&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常实用的快捷键, 暂时还不知道别的编辑器还没有发现有同样功能的. 按一下代码就自动缩进得非常整齐了! &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注释/反注释: &lt;code&gt;ctrl+alt+C&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pydev下面的注释/反注释: &lt;code&gt;ctrl+/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ling-wai-yi-xie-you-yong-de-kuai-jie-jian"&gt;另外一些有用的快捷键&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;显示提示: &lt;code&gt;alt+/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个可以说是eclipse快捷键里面最有用的一个. 可以显示代码提示的窗口, 这也是我喜欢eclipse的原因之一. 虽然编写代码的时候eclipse的提示框也会在适当的时候出来, 比如按下了&lt;code&gt;.&lt;/code&gt;的时候, 但是当它没有出现的时候我们总可以按下&lt;code&gt;alt+/&lt;/code&gt;让提示框弹出来. 尤其在使用Java的时候, eclipse的提示相当智能, 也就是说会根据上下文以及函数的定义等东西来提示那些可能出现的项目. 另外, 有时候可能定义了一个超长名字的变量(这样代码可能比较清楚一些), 然后用这个快捷键, 就只需要打一下这个很长名字的前几个字母就可以自动补全了(如果补全的不是想要的, 只需要多按几次这个快捷键就会显示其他可能了)! &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开函数/变量的声明: &lt;code&gt;F3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比方说在程序的某一段看到了调用一个函数, 然后想看看这个函数的内容, 这是不需要拿着鼠标上下滚动着找(有时候定义的函数可能在另一个文件里, 那就更难找了), 只需要按下 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Eclipse让我很喜欢的最大原因大概就是它的好用的快捷键了, 这里进行一下总结, 掌握这些快捷键可以让编辑代码变得更加高效. &lt;/p&gt;
&lt;h2 id="ji-ben-kuai-jie-jian"&gt;基本快捷键&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;格式化代码: &lt;code&gt;ctrl+alt+F&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常实用的快捷键, 暂时还不知道别的编辑器还没有发现有同样功能的. 按一下代码就自动缩进得非常整齐了! &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注释/反注释: &lt;code&gt;ctrl+alt+C&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pydev下面的注释/反注释: &lt;code&gt;ctrl+/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ling-wai-yi-xie-you-yong-de-kuai-jie-jian"&gt;另外一些有用的快捷键&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;显示提示: &lt;code&gt;alt+/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个可以说是eclipse快捷键里面最有用的一个. 可以显示代码提示的窗口, 这也是我喜欢eclipse的原因之一. 虽然编写代码的时候eclipse的提示框也会在适当的时候出来, 比如按下了&lt;code&gt;.&lt;/code&gt;的时候, 但是当它没有出现的时候我们总可以按下&lt;code&gt;alt+/&lt;/code&gt;让提示框弹出来. 尤其在使用Java的时候, eclipse的提示相当智能, 也就是说会根据上下文以及函数的定义等东西来提示那些可能出现的项目. 另外, 有时候可能定义了一个超长名字的变量(这样代码可能比较清楚一些), 然后用这个快捷键, 就只需要打一下这个很长名字的前几个字母就可以自动补全了(如果补全的不是想要的, 只需要多按几次这个快捷键就会显示其他可能了)! &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开函数/变量的声明: &lt;code&gt;F3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比方说在程序的某一段看到了调用一个函数, 然后想看看这个函数的内容, 这是不需要拿着鼠标上下滚动着找(有时候定义的函数可能在另一个文件里, 那就更难找了), 只需要按下&lt;code&gt;F3&lt;/code&gt;, 就会自动跳转到函数的声明的代码片段里. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行程序: &lt;code&gt;ctrl+F11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;显示eclipse提供的解决方案: &lt;code&gt;ctrl+1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如说, 有时候可能一个变量的名字拼错了, 或者是忘记了导入相应的一个package, 所以在变量下面有红线. 而这时其实eclipse可以提供一些解决方案, 比如修改拼写或者import package, 要查看eclipse提供的解决方案, 只需要把光标移动到画红线的部分, 然后按一下&lt;code&gt;ctrl+1&lt;/code&gt;就好了. &lt;/p&gt;
&lt;h2 id="qi-ta-yi-xie-kuai-jie-jian"&gt;其他一些快捷键&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;复制上一行代码: &lt;code&gt;ctrl+alt+down&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在写那些好几行比较相似的代码时有点用处. 不过linux的用户有些可能不能用 — 和那个跳到下一个工作区的快捷键重复了...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跳转到下一个/上一个函数/类: &lt;code&gt;ctrl+shift+down/up&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在光标在某一个函数里, 想跳到下一个函数的时候, 按半天的向下按钮不如这个来得快~&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动导入package: &lt;code&gt;ctrl+shift+o&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如写Java代码的时候, 开始没有import &lt;code&gt;LinkedList&lt;/code&gt;这个包, 写到一半突然要用到了, 那么先写上, 然后不用再回到开头加上导入LinkedList的语句, 而只要按一下这个组合键就可以了. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;显示outline: &lt;code&gt;ctrl+o&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;按下以后, 显示outline视图, 这个视图上看类的成员和函数很一目了然&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重命名: &lt;code&gt;shift+alt+r&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eclipse的重命名和简单的查找替换还是不一样的, 它可以在替换正确的那些命名而不是全部查找替换. 比如重命名一个函数内部的变量的话, 外部即使有重名的也不会影响到. 
要是这个快捷键记不住, 就用menu(键盘右边的ctrl的左边)==&amp;gt; refactoring...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查找下一处出现的地方: &lt;code&gt;ctrl+k&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有时候也用得着.&lt;/p&gt;</content><category term="eclipse"></category></entry><entry><title>Eclipse插件推荐</title><link href="http://x-wei.github.io/Eclipse%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90.html" rel="alternate"></link><published>2014-07-15T00:00:00+02:00</published><updated>2014-07-15T00:00:00+02:00</updated><author><name>mx</name></author><id>tag:x-wei.github.io,2014-07-15:/Eclipse插件推荐.html</id><summary type="html">&lt;p&gt;Eclipse被称为编程的瑞士军刀, 意思就是只用一个eclipse就可以做很多事情. &lt;/p&gt;
&lt;p&gt;最近越来越喜欢eclipse了, 因为作为编辑器而言, eclipse的编辑器让我用起来最舒服的一个(配合一些&lt;a href="x-wei.github.com/Eclipse快捷键总结.html"&gt;快捷键&lt;/a&gt;以后更是非常爽). 这半年多来发现了一些非常好用的eclipse的插件, 有了这些插件, eclipse可以做更多的事情... 接下来简单介绍一下:&lt;/p&gt;
&lt;h2 id="cha-jian-an-zhuang-de-fang-fa"&gt;插件安装的方法&lt;/h2&gt;
&lt;p&gt;先简单说一下eclipse的插件安装方法, 在eclispe界面上, 点击: Help-&amp;gt;Install New Software:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./Eclipse插件推荐/pasted_image.png"/&gt;&lt;/p&gt;
&lt;p&gt;之后添加对应的URL就可以了... &lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./Eclipse插件推荐/pasted_image001.png"/&gt;&lt;/p&gt;
&lt;h1 id="adt_1"&gt;ADT&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://developer.android.com/sdk/installing/installing-adt.html"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;eclipse里添加的URL: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;https://dl-ssl.google.com/android/eclipse/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个不用说了吧, Eclipse已经基本上是android开发的御用IDE了. &lt;/p&gt;
&lt;h2 id="pydev"&gt;PyDev&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://pydev.org/"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;URL:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;http://pydev.org/updates&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;python的开发更需要有一个提示的东东(好像叫pyLint, 就是可以发现代码里的一些显然的错误), 这个插件装好以后我就很少用geany写python程序了, 尤其是当程序超过100行以后... &lt;/p&gt;
&lt;p&gt;但是让人不爽的是, 他需要新建一个project才能运行. 这也是Eclipse的一个让人不爽的方面. 如果是一个小的python程序的话我还是会用geany. 另外, 强烈推荐 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Eclipse被称为编程的瑞士军刀, 意思就是只用一个eclipse就可以做很多事情. &lt;/p&gt;
&lt;p&gt;最近越来越喜欢eclipse了, 因为作为编辑器而言, eclipse的编辑器让我用起来最舒服的一个(配合一些&lt;a href="x-wei.github.com/Eclipse快捷键总结.html"&gt;快捷键&lt;/a&gt;以后更是非常爽). 这半年多来发现了一些非常好用的eclipse的插件, 有了这些插件, eclipse可以做更多的事情... 接下来简单介绍一下:&lt;/p&gt;
&lt;h2 id="cha-jian-an-zhuang-de-fang-fa"&gt;插件安装的方法&lt;/h2&gt;
&lt;p&gt;先简单说一下eclipse的插件安装方法, 在eclispe界面上, 点击: Help-&amp;gt;Install New Software:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./Eclipse插件推荐/pasted_image.png"/&gt;&lt;/p&gt;
&lt;p&gt;之后添加对应的URL就可以了... &lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./Eclipse插件推荐/pasted_image001.png"/&gt;&lt;/p&gt;
&lt;h1 id="adt_1"&gt;ADT&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://developer.android.com/sdk/installing/installing-adt.html"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;eclipse里添加的URL: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;https://dl-ssl.google.com/android/eclipse/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个不用说了吧, Eclipse已经基本上是android开发的御用IDE了. &lt;/p&gt;
&lt;h2 id="pydev"&gt;PyDev&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://pydev.org/"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;URL:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;http://pydev.org/updates&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;python的开发更需要有一个提示的东东(好像叫pyLint, 就是可以发现代码里的一些显然的错误), 这个插件装好以后我就很少用geany写python程序了, 尤其是当程序超过100行以后... &lt;/p&gt;
&lt;p&gt;但是让人不爽的是, 他需要新建一个project才能运行. 这也是Eclipse的一个让人不爽的方面. 如果是一个小的python程序的话我还是会用geany. 另外, 强烈推荐&lt;a href="http://bpython-interpreter.org/"&gt;bpython&lt;/a&gt;作为python的terminal, 非常爽快!!&lt;/p&gt;
&lt;h2 id="color-theme"&gt;color theme&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.07net01.com/linux/Eclipsexiapeizhizhutiyanse_Eclipse_jiqiao_9354_1344993754.html"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;URL:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;http://eclipse-color-theme.github.com/update&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改配色的一个插件, 非常喜欢, 因为默认的配色看的时间长了眼睛就不舒服... 有多种配色方案可选. &lt;/p&gt;
&lt;h2 id="jigloo"&gt;jigloo&lt;/h2&gt;
&lt;p&gt;这是当年学java GUI编程的时候用到的, 可以拖放着来写Swing/AWT的GUI代码... 有点像现在ADT设计界面的东西... &lt;/p&gt;
&lt;p&gt;不过我不喜欢写java的GUI... 乱糟糟的...&lt;/p&gt;
&lt;p&gt;做这个的机构已经很久没有更新了... 不过2010年的版本现在用还是没有问题的. &lt;/p&gt;
&lt;h2 id="greenuml"&gt;greenUML&lt;/h2&gt;
&lt;p&gt;这个之前的&lt;a href="http://x-wei.github.io/%E4%BD%BF%E7%94%A8Eclipse%E7%9A%84UML%E6%8F%92%E4%BB%B6%E7%94%9F%E6%88%90%E7%B1%BB%E5%9B%BE.html"&gt;帖子&lt;/a&gt;已经介绍了, 写报告的时候可以用一用...&lt;/p&gt;
&lt;h2 id="xmind"&gt;xmind&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://jeljo.wordpress.com/2012/02/11/xmind-on-eclipse/"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个"插件"已经作为一个独立的软件了... 用来画思维导图的工具, 蛮好用的.&lt;/p&gt;
&lt;p&gt;作为一个独立的软件下载的话, 去&lt;a href="http://www.xmind.net/"&gt;这里&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="texlipse"&gt;TeXlipse&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://texlipse.sourceforge.net/index.php"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;URL:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;http://texlipse.sourceforge.net/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;没错! Eclipse也可以写tex的...&lt;/p&gt;
&lt;p&gt;不过这个我装了但是没有用(因为发现它的时候报告已经写好了...). 貌似也可以实时预览的, 再加上eclipse的编辑器的提示功能, 应该不错!&lt;/p&gt;
&lt;h2 id="she-zhi-dai-li"&gt;设置代理&lt;/h2&gt;
&lt;p&gt;X是个神奇的学校, 所以上网要设置代理..... 关于设置代理的问题在之前一篇帖子里提到了, 粘过来:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;window → preference → General → Network Connections&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./eclipse的UML插件/pasted_image001.png"/&gt;&lt;/p&gt;
&lt;h2 id="cha-jian-xie-zai-de-fang-fa"&gt;插件卸载的方法&lt;/h2&gt;
&lt;p&gt;说不定哪一天也会需要卸载插件, 卸载的方法是 :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Help--&amp;gt; About Eclipse Platform--&amp;gt; Installation Details&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后再补充一句, Eclipse的最大优势是编辑器非常讨我喜欢, 但是缺点是在老机器上运行比较卡, 而且不管写什么都要先指定workspace以及建立一个project. 如果想要一把轻量级的"瑞士军刀"的话, geany是个不错的选择.&lt;/p&gt;</content><category term="eclipse"></category></entry><entry><title>使用Eclipse的UML插件生成类图</title><link href="http://x-wei.github.io/%E4%BD%BF%E7%94%A8Eclipse%E7%9A%84UML%E6%8F%92%E4%BB%B6%E7%94%9F%E6%88%90%E7%B1%BB%E5%9B%BE.html" rel="alternate"></link><published>2014-05-31T00:00:00+02:00</published><updated>2014-05-31T00:00:00+02:00</updated><author><name>mx</name></author><id>tag:x-wei.github.io,2014-05-31:/使用Eclipse的UML插件生成类图.html</id><summary type="html">&lt;p&gt;Created samedi 31 mai 2014UML就是可以把程序的结构用图的形式表达出来的东西(好像叫类图), 虽然写程序的时候不大会用到这种东西来搞, 但是写报告的时候如果能够加上一张图的话, 就可以少费些口舌来解释代码了, 而且还有一种高大上的赶脚... 所以写完程序写报告的时候可以用一下. &lt;/p&gt;
&lt;p&gt;废话不多说, 看看我最后生成的UML图:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./eclipse的UML插件/pasted_image.png"/&gt;&lt;/p&gt;
&lt;p&gt;这张图表示一个抽象类&lt;code&gt;Operration&lt;/code&gt;有三个子类, 然后他们之间的关系... 如果用文字的话要解释半天吧...&lt;/p&gt;
&lt;p&gt;这张图是用&lt;a href="http://green.sourceforge.net/"&gt;Green UML&lt;/a&gt;做出来的, 这是一个eclipse插件, 安装方法为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在eclipse里, &lt;code&gt;Help-&amp;gt;Install New Software&lt;/code&gt; 然后Add这个URL: &lt;a href="http://www.cse.buffalo.edu/faculty/alphonce/green"&gt;http://www.cse.buffalo.edu/faculty/alphonce/green&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;然后一路Next安装就可以了...&lt;/li&gt;
&lt;li&gt;如果老师显示pending, 可能是代理的问题(在X非常不爽的一点...哎...), 不过没事, 代理的设置在: &lt;code&gt;window → preference → General → Network Connections …&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Created samedi 31 mai 2014UML就是可以把程序的结构用图的形式表达出来的东西(好像叫类图), 虽然写程序的时候不大会用到这种东西来搞, 但是写报告的时候如果能够加上一张图的话, 就可以少费些口舌来解释代码了, 而且还有一种高大上的赶脚... 所以写完程序写报告的时候可以用一下. &lt;/p&gt;
&lt;p&gt;废话不多说, 看看我最后生成的UML图:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./eclipse的UML插件/pasted_image.png"/&gt;&lt;/p&gt;
&lt;p&gt;这张图表示一个抽象类&lt;code&gt;Operration&lt;/code&gt;有三个子类, 然后他们之间的关系... 如果用文字的话要解释半天吧...&lt;/p&gt;
&lt;p&gt;这张图是用&lt;a href="http://green.sourceforge.net/"&gt;Green UML&lt;/a&gt;做出来的, 这是一个eclipse插件, 安装方法为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在eclipse里, &lt;code&gt;Help-&amp;gt;Install New Software&lt;/code&gt; 然后Add这个URL: &lt;a href="http://www.cse.buffalo.edu/faculty/alphonce/green"&gt;http://www.cse.buffalo.edu/faculty/alphonce/green&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;然后一路Next安装就可以了...&lt;/li&gt;
&lt;li&gt;如果老师显示pending, 可能是代理的问题(在X非常不爽的一点...哎...), 不过没事, 代理的设置在: &lt;code&gt;window → preference → General → Network Connections&lt;/code&gt;, 填上就应该好了...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./eclipse的UML插件/pasted_image001.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用Green UML生成类图的时候, 在java文件上点击右键, 选项里有Green UML的选项:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./eclipse的UML插件/pasted_image002.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后就OK了...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外还在网上找到了&lt;a href="http://www.modelgoon.org/"&gt;model goon&lt;/a&gt;, 不过它生成的类图貌似没有把所有信息都标上, 而且不太好看...&lt;/p&gt;</content><category term="java"></category><category term="eclipse"></category></entry><entry><title>linux下安装并使用java开发opencv的配置</title><link href="http://x-wei.github.io/linux%E4%B8%8B%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8java%E5%BC%80%E5%8F%91opencv%E7%9A%84%E9%85%8D%E7%BD%AE.html" rel="alternate"></link><published>2014-02-10T00:00:00+01:00</published><updated>2014-02-10T00:00:00+01:00</updated><author><name>mx</name></author><id>tag:x-wei.github.io,2014-02-10:/linux下安装并使用java开发opencv的配置.html</id><summary type="html">&lt;p&gt;[TOC] &lt;/p&gt;
&lt;p&gt;今天花了四个小时, 终于在linux下把eclipse下java开发opencv给搞定了... 至于为什么花这么久的时间... 且听我慢慢讲... &lt;/p&gt;
&lt;h2 id="linuxbian-yi-an-zhuang-opencv"&gt;linux编译安装opencv&lt;/h2&gt;
&lt;p&gt;首先, linux下安装opencv其实不麻烦的, 参考文档即可完成:
&lt;a href="http://docs.opencv.org/trunk/doc/tutorials/introduction/linux_install/linux_install.html"&gt;http://docs.opencv.org/trunk/doc/tutorials/introduction/linux_install/linux_install.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大致有以下几个步骤:&lt;/p&gt;
&lt;p&gt;1) 安装gcc以及cmake等等乱七八糟的软件(不过ubuntu下默认差不多都有了吧...)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install build-essential python-dev cmake&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2) 下载opencv-2.4.8.zip并解压缩&lt;/p&gt;
&lt;p&gt;3) 新建一个build文件夹&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;cd ~/opencv&lt;/span&gt;
&lt;span class="code-line"&gt;mkdir build&lt;/span&gt;
&lt;span class="code-line"&gt;cd build&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4) 在终端里输入: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;cmake -D CMAKE_BUILD_TYPE=RELEASE -D …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;[TOC] &lt;/p&gt;
&lt;p&gt;今天花了四个小时, 终于在linux下把eclipse下java开发opencv给搞定了... 至于为什么花这么久的时间... 且听我慢慢讲... &lt;/p&gt;
&lt;h2 id="linuxbian-yi-an-zhuang-opencv"&gt;linux编译安装opencv&lt;/h2&gt;
&lt;p&gt;首先, linux下安装opencv其实不麻烦的, 参考文档即可完成:
&lt;a href="http://docs.opencv.org/trunk/doc/tutorials/introduction/linux_install/linux_install.html"&gt;http://docs.opencv.org/trunk/doc/tutorials/introduction/linux_install/linux_install.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大致有以下几个步骤:&lt;/p&gt;
&lt;p&gt;1) 安装gcc以及cmake等等乱七八糟的软件(不过ubuntu下默认差不多都有了吧...)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install build-essential python-dev cmake&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2) 下载opencv-2.4.8.zip并解压缩&lt;/p&gt;
&lt;p&gt;3) 新建一个build文件夹&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;cd ~/opencv&lt;/span&gt;
&lt;span class="code-line"&gt;mkdir build&lt;/span&gt;
&lt;span class="code-line"&gt;cd build&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4) 在终端里输入: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ..&lt;/span&gt;
&lt;span class="code-line"&gt;make&lt;/span&gt;
&lt;span class="code-line"&gt;sudo make install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;make命令会花费几十分钟时间...
然后&lt;strong&gt;理论上&lt;/strong&gt;就结束了... 如果不用java开发的话 就OK了 比如 可以运行sample文件夹下的python代码...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但是&lt;/strong&gt;, 如果要使用java开发的话 需要接着这样做.....&lt;/p&gt;
&lt;h2 id="an-zhuang-opencv-java"&gt;安装opencv-java&lt;/h2&gt;
&lt;p&gt;这一步非常DT, 因为官网上还有一个文档, 专门讲怎么用java开发的...
&lt;a href="http://docs.opencv.org/doc/tutorials/introduction/desktop_java/java_dev_intro.html"&gt;http://docs.opencv.org/doc/tutorials/introduction/desktop_java/java_dev_intro.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1) 首先, 需要安装ant: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install ant&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2) 其次 需要运行cmake, 关键是cmake的参数, 官网给的是这样的: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;export JAVA_HOME=/usr/lib/jvm/java-6-oracle#这句不加应该也可以的&lt;/span&gt;
&lt;span class="code-line"&gt;cmake -DBUILD_SHARED_LIBS=OFF ..&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意看输出的, 如果"To be built"里面有java这一项的话, 就&lt;strong&gt;应该&lt;/strong&gt;是OK的.... 接下来只要&lt;code&gt;make -j8&lt;/code&gt; 就可以了...&lt;/p&gt;
&lt;p&gt;最坑爹的地方来了, 以这样的参数运行cmake以后, 运行&lt;code&gt;make -j8&lt;/code&gt;总是不成功, 说有错误.....&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./linux下安装并使用java开发opencv的配置/pasted_image.png"/&gt;&lt;/p&gt;
&lt;p&gt;查了半天, 发现这是一个BUG:
&lt;a href="http://code.opencv.org/issues/2859"&gt;http://code.opencv.org/issues/2859&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;那么试一试加上参数: &lt;code&gt;-DBUILD_TESTS=OFF&lt;/code&gt; 吧...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以cmake的参数要这样写才可以&lt;/strong&gt;: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -DBUILD_TESTS=OFF ..&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3) 用上面那样的参数运行cmake以后, 再: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;make -j8&lt;/span&gt;
&lt;span class="code-line"&gt;sudo make install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样就可以成功make了...&lt;/p&gt;
&lt;h2 id="ru-he-pan-duan-shi-fou-an-zhuang-cheng-gong"&gt;如何判断是否安装成功?&lt;/h2&gt;
&lt;p&gt;以上操作结束后, 看看build文件夹, bin目录下是不是有一个&lt;code&gt;opencv-248.jar&lt;/code&gt;文件:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="img-responsive" src="../images/./linux下安装并使用java开发opencv的配置/pasted_image001.png"/&gt;&lt;/p&gt;
&lt;p&gt;如果有的话 就说明成功安装了opencv的java组件... &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;!!注意!!&lt;/strong&gt;
&lt;strong&gt;不能用windows下opencv安装目录下的那个opencv-248.jar&lt;/strong&gt;!! 
刚才生成那个jar和windows下的jar不一样的!! (我查了MD5码... 其实看文件大小也能看出来!!)&lt;/p&gt;
&lt;h2 id="eclipsexia-de-pei-zhi"&gt;Eclipse下的配置&lt;/h2&gt;
&lt;p&gt;这里有一篇非常好的帖子, 写的非常到位, 我就不重复了, 链接:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://exintopro.net/blog/2013/10/02/setting-up-eclipse-for-using-opencv-java-in-ubuntu/"&gt;http://exintopro.net/blog/2013/10/02/setting-up-eclipse-for-using-opencv-java-in-ubuntu/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个帖子虽然很好, 但是没有介绍编译的那一部分, 由于安装java组件时的编译过程和官网给的不一样, 所以才导致我废了半天的时间啊!......&lt;/p&gt;</content><category term="eclipse"></category><category term="java"></category><category term="opencv"></category></entry></feed>